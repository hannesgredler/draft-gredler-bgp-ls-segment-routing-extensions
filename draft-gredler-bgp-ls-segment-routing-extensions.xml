<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-gredler-bgp-ls-segment-routing-extensions-00"
     ipr="trust200902">
  <front>
    <title abbrev="BGP LS extensions for Segment Routing">
      BGP Link-State extensions for Segment Routing</title>

    <author fullname="Hannes Gredler" initials="H." surname="Gredler">
      <organization>Juniper Networks, Inc.</organization>
      <address>
        <postal>
          <street>1194 N. Mathilda Ave.</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>hannes@juniper.net</email>
      </address>
    </author>

    <date day="1" month="December" year="2013"/>

    <area>Routing</area>

    <workgroup>Inter-Domain Routing</workgroup>

    <keyword>MPLS</keyword>
    <keyword>SID</keyword>
    <keyword>BGP</keyword>
    <keyword>Label advertisement</keyword>
    <keyword>Segment Routing</keyword>

    <abstract>
      <t>In <xref target="I-D.ietf-idr-ls-distribution"></xref>
      support for disseminating link-state graphs has been added to BGP.
      The basic link-state primitives fro BGP are nodes, links and prefixes.
      For advertising MPLS LSPs or Path Segments the notion
      of a 'path' needs to be added to the basic BGP Link-state primitives.
      </t>

      <t>This document describes protocol extensions for the BGP Link state
      Protocol Address Family. It adds the same path description properties than
      its IGP counterparts,
      <xref target="I-D.previdi-isis-segment-routing-extensions">IS-IS</xref>,
      <xref target="I-D.psenak-ospf-segment-routing-extensions">OSPFv2</xref> and
      <xref target="I-D.psenak-ospf-segment-routing-ospfv3-extension">OSPFv3</xref>.
      </t>

      <t>Furthermore this documents describes the ability to describe both
      existing paths (northbound) as well as 'to be created' paths (southbound)
      in a network, which makes it a SDN suitable, p2mp path creation protocol.
      </t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.
      </t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>The contents of a Link State Database (LSDB) or a Traffic Engineering
      Database (TED) has the scope of an IGP area. Some applications, such as
      end-to-end Traffic Engineering (TE), would benefit from visibility outside
      one area or Autonomous System (AS) in order to make better path decisions.</t>

      <t>Segment Routing (SR) allows the advertisement of single or multi-hop LSP paths.
      The flooding scope for the IGP extensions for Segment routing is area-wide.
      That implies that by using the IGP alone it is not possible to construct segments
      across an IGP Area or AS boundaries.
      </t>

      <t>Segment Routing architecture is described in <xref
      target="I-D.filsfils-rtgwg-segment-routing"/>.</t>

      <t>Segment Routing use cases are described in <xref
      target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>

      <t>This document describes a mechanism by which Link State
      'path' information can be collected from networks and shared with external
      components using the BGP routing protocol <xref
      target="RFC4271"></xref>. Furthermore a mechanism is defined which allows
      external components to request network path creation by using stacked segments.
      This is achieved by extending the BGP Network Layer
      Reachability Information (NLRI) encoding format as defined in
      <xref target="I-D.ietf-idr-ls-distribution"></xref>.
      </t>

      <t>A router maintains one or more databases for storing link-state
      information about nodes, links and paths in any given area. For segment routing
      the 'path' information are disseminated.
      Attributes of a path stored in these databases include:
      headend/tailend IP Address, ERO list, backup ERO list, supported hop-by-hop algorithms,
      and hop-by-hop label ranges.

      The router's BGP process can retrieve the path information
      from these LSDBs and distribute it to a consumer, either directly
      or via a peer BGP Speaker (typically a dedicated Route Reflector), using
      the encoding specified in this document.</t>

      <t>The collection of Link State MPLS path information and its
      distribution to consumers is shown in the following figure.</t>

      <figure anchor="MECHANISM-CONSUMER"
              title="Link State MPLS Path info collection">
        <artwork>
                        +-----------+
                        | Consumer  |
                        +-----------+
                              ^
                              |
                        +-----------+
                        |    BGP    |               +-----------+
                        |  Speaker  |               | Consumer  |
                        +-----------+               +-----------+
                          ^   ^   ^                       ^
                          |   |   |                       |
          +---------------+   |   +-------------------+   |
          |                   |                       |   |
    +-----------+       +-----------+             +-----------+
    |    BGP    |       |    BGP    |             |    BGP    |
    |  Speaker  |       |  Speaker  |    . . .    |  Speaker  |
    +-----------+       +-----------+             +-----------+
          ^                   ^                         ^
          |                   |                         |
         IGP                 IGP                       IGP
        </artwork>
      </figure>

      <t>The generation of Link State MPLS path information by a controller and its
      distribution to BGP speakers is shown in the following figure.</t>

      <figure anchor="MECHANISM-PRODUCER"
              title="Link State MPLS Path propagation">
        <artwork>
                        +-----------+
                        | Controller|
                        +-----------+
                              |
                              v
                        +-----------+
                        |    BGP    |
                        |  Speaker  |
                        +-----------+
                          |   |   |
                          |   |   |
          +---------------+   |   +-------------------+
          |                   |                       |
          v                   v                       v
    +-----------+       +-----------+             +-----------+
    |    BGP    |       |    BGP    |             |    BGP    |
    |  Speaker  |       |  Speaker  |    . . .    |  Speaker  |
    +-----------+       +-----------+             +-----------+
        </artwork>
      </figure>


    </section>

    <section title="Motivation and Applicability">
      <t>This section describes use cases from which the requirements can be
      derived.</t>

      <section title="MPLS-TE with PCE">
        <t>As described in <xref target="RFC4655"></xref> a PCE can be used to
        compute MPLS-TE paths within a "domain" (such as an IGP area) or
        across multiple domains (such as a multi-area AS, or multiple ASes).
        <list style="symbols">
          <t>Within a single area, the PCE offers enhanced computational power
          that may not be available on individual routers, sophisticated policy
          control and algorithms, and coordination of computation across the
          whole area.</t>

          <t>If a router wants to compute a MPLS-TE path across IGP areas its
          own TED lacks visibility of the complete topology. That means that the
          router cannot determine the end-to-end path, and cannot even select
          the right exit router (Area Border Router - ABR) for an optimal
          path. This is an issue for large-scale networks that need to segment
          their core networks into distinct areas, but which still want to take
          advantage of MPLS-TE.</t>
        </list></t>

        <t>Previous solutions used per-domain path computation <xref
        target="RFC5152"></xref>. The source router could only compute the path
        for the first area because the router only has full topological
        visibility for the first area along the path, but not for subsequent
        areas. Per-domain path computation uses a technique called
        "loose-hop-expansion" <xref target="RFC3209"></xref>, and selects the
        exit ABR and other ABRs or AS Border Routers (ASBRs) using the IGP
        computed shortest path topology for the remainder of the path. This may
        lead to sub-optimal paths, makes alternate/back-up path computation
        hard, and might result in no TE path being found when one really does
        exist.</t>

        <t>The PCE presents a computation server that may have visibility into
        more than one IGP area or AS, or may cooperate with other PCEs to
        perform distributed path computation. The PCE obviously needs access to
        the TED for the area(s) it serves, but <xref target="RFC4655"></xref>
        does not describe how this is achieved. Many implementations make the
        PCE a passive participant in the IGP so that it can learn the latest
        state of the network, but this may be sub-optimal when the network is
        subject to a high degree of churn, or when the PCE is responsible for
        multiple areas.</t>

        <t>The following figure shows how a PCE can get its TED information
        using the mechanism described in this document.</t>

        <figure anchor="PCE-REFERENCE"
                title="External PCE node using a TED synchronization mechanism">
          <artwork>
             +----------+                           +---------+
             |  -----   |                           |   BGP   |
             | | TED |&lt;-+--------------------------&gt;| Speaker |
             |  -----   |   TED synchronization     |         |
             |    |     |        mechanism:         +---------+
             |    |     | BGP with Link-State NLRI
             |    v     |
             |  -----   |
             | | PCE |  |
             |  -----   |
             +----------+
                  ^
                  | Request/
                  | Response
                  v
    Service  +----------+   Signaling  +----------+
    Request  | Head-End |   Protocol   | Adjacent |
    --------&gt;|  Node    |&lt;------------&gt;|   Node   |
             +----------+              +----------+
	  </artwork>
        </figure>

        <t>The mechanism in this document allows the necessary TED information
        to be collected from the IGP within the network, filtered according to
        configurable policy, and distributed to the PCE as necessary.
	Furthermore the PCE can distribute the paths that it did compute by
	using the BGP distribution mesh.</t>
      </section>

    </section>

    <section title="Carrying Path Information in BGP Link State Address Family">
      <t>This specification contains two parts: definition of a new BGP NLRI
      that describes links, nodes and prefixes comprising IGP link state
      information, and definition of a new BGP path attribute (BGP-LS attribute)
      that carries link, node and prefix properties and attributes, such as the
      link and prefix metric or auxiliary Router-IDs of nodes, etc.</t>

      <section anchor="TLV-section" title="TLV Format">
        <t>Information in the new Link-State NLRIs and attributes is encoded in
        Type/Length/Value triplets. The TLV format is shown in <xref
        target="TLV-figure"></xref>.</t>

        <t>
          <figure anchor="TLV-figure" title="TLV format">
          <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Type             |             Length            | 
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  //                        Value (variable)                     //
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
            </artwork>
          </figure>
        </t>

        <t>The Length field defines the length of the value portion in octets
        (thus a TLV with no value portion would have a length of zero). The TLV
        is not padded to four-octet alignment. Unrecognized types are preserved
        and propagated. In order to compare NLRIs with unknown TLVs all TLVs
        MUST be ordered in ascending order. If there are more TLVs of the same
        type, then the TLVs MUST be ordered in ascending order of the TLV value
        within the set of TLVs with the same type.  All TLVs that are not
        specified as mandatory are considered optional.
        </t>
      </section>

      <section title="Segment Routing Identifiers in the BGP LS Attribute">

	<t>Segment Routing architecture (<xref
	target="I-D.filsfils-rtgwg-segment-routing"/>) defines different types
	of Segment Identifiers (SID). This document defines the BGP Link State encodings
	for the IGP-Prefix-SID, the IGP-Adjacency-SID, the IGP-LAN-Adjacency-SID
	and the Binding-SID.</t>

	<section anchor="SIDLABEL" title="SID/Label Sub-TLV">
	  <t>The SID/Label Sub-TLV is present in multiple Sub-TLVs defined in
	  this document and contains a SID or a MPLS Label. The SID/Label
	  Sub-TLV has the following format:
	  <figure>
	    <artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Type        |     Length    |  
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          SID/Label (variable)                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

where:</artwork>
          </figure>
	  <list>
            <t>Type: 1</t>
            <t>Length: variable (3 or 4)</t>
            <t>SID/Label: if length is set to 3 then the 20 rightmost bits
            represent a MPLS label. If length is 4 then the value represents a
            32 bits SID.</t>
          </list></t>
	</section>

        <section title="Node Attribute TLVs">
          <t>Node attribute TLVs are the TLVs that may be encoded in the BGP-LS
          attribute with a node NLRI. Each 'Node Attribute' is a
          Type/Length/Value (TLV) triplet formatted as defined in <xref
          target="TLV-section"></xref>.</t>

          <t>The following 'Node Attribute' TLVs are are valid in the
          BGP LINK_STATE attribute:</t>

          <texttable anchor="node-attribute_tlv" title="Node Attribute TLVs">
            <ttcol align="center">TLV Code Point</ttcol>
            <ttcol align="left">Description</ttcol>
            <ttcol align="right">Length</ttcol>
            <ttcol align="left">Value defined in:</ttcol>

            <c>1030</c>
            <c>SID/Label Binding</c>
            <c>variable</c>
            <c><xref target="BINDING-TLV"/></c>

            <c>1031</c>
            <c>SR Capabilities</c>
            <c>variable</c>
            <c><xref target="SR-CAP"/></c>

            <c>1032</c>
            <c>SR Algorithm</c>
            <c>variable</c>
            <c><xref target="SR-ALGO"/></c>
          </texttable>

	  <section anchor="BINDING-TLV" title="SID/Label Binding TLV">
	    <t>The SID/Label Binding TLV MAY be originated by any router in an
	    SR domain. The router may advertise a SID/Label binding to a FEC
	    along with at least a single 'nexthop style' anchor. The protocol
	    supports more than one 'nexthop style' anchor to be attached to a
	    SID/Label binding, which results into a simple path description
	    language. In analogy to RSVP the terminology for this is called an
	    'Explicit Route Object' (ERO). Since ERO style path notation allows to
	    anchor SID/label bindings to to both link and node IP addresses any
	    label switched path, can be described. Furthermore also SID/Label
	    Bindings from external protocols can get easily re-advertised.</t>

	    <t>The SID/Label Binding TLV may be used for advertising SID/Label
	    Bindings and their associated Primary and Backup paths. In one single
	    TLV either a primary ERO Path, a backup ERO Path or both are
	    advertised. If a router wants to advertise multiple parallel paths
	    then it can generate several TLVs for the same Prefix/FEC. Each
	    occurence of a Binding TLV with respect with a given FEC Prefix has
	    accumulating and not canceling semantics.
	    </t>

	    <t>The SID/Label Binding TLV has type 1032 and has the following
	    format:</t>

        <figure anchor="SID-MPLS-Binding-TLV-figure"
                title="SID/Label Binding TLV format">
          <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |             Type              |            Length             |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |     Flags     |     Weight    |             Range             |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | Prefix Length |            FEC Prefix (variable)              |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                   optional subTLVs (variable)                 |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	  </artwork>
        </figure>

        <t><list style="symbols">
	    <t>Type: 1030</t>
	  
	    <t>Length: variable.</t>

            <t>1 octet of flags</t>

            <t>1 octet of Prefix length</t>

            <t>0-16 octets of FEC Prefix</t>

            <t>2 octets of Range</t>

            <t>sub-TLVs, where each sub-TLV consists of a sequence of: <list
                style="symbols">
                <t>1 octet of sub-TLV type</t>

                <t>1 octet of length of the value field of the sub-TLV</t>

                <t>0-255 octets of value</t>
              </list></t>
          </list></t>

        <section title="Flags">
          <t>Flags: 1 octet field of following flags:<figure>
              <artwork> 
 0 1 2 3 4 5 6 7 
+-+-+-+-+-+-+-+-+
|F|M|X|S|       | 
+-+-+-+-+-+-+-+-+
	  </artwork>
            </figure> where: <list style="hanging">
              <t>F-Flag: Address Family flag. If unset, then the Prefix FEC
              carries an IPv4 Prefix. If set then the Prefix FEC carries an
              IPv6 Prefix.</t>

              <t>M-Flag: Mirror Context flag. Set if the advertised SID/path
              corresponds to a mirrored context.</t>

              <t>X-Flag: Index flag. Set if the value of the SID/Label Sub-TLV
              carries an index. Unset if the value of the SID/Label Sub-TLV
              carries a local SID/Label.</t>

              <t>S-Flag: subTLV present 'S' flag: Set if there are subTLVs
              present.</t>

              <t>Other bits: MUST be zero when originated and ignored when
              received.</t>
            </list></t>
        </section>

        <section title="Weight">
          <t>Weight: 1 octet: The value represents the weight of the path for
          the purpose of load balancing. The use of the weight is defined in
          <xref target="I-D.filsfils-rtgwg-segment-routing"/>.</t>
        </section>

        <section title="Range">
          <t>The 'Range' field provides the ability to specify a range of
          addresses and their associated Prefix SIDs. It is essentially a
          compression scheme to distribute a continuous Prefix and their
          continuous, corresponding SID/Label Block. If a single SID is
          advertised then the range field MUST be set to one. For range
          advertisments &gt; 1, the number of addresses that need to be mapped
          into a Prefix-SID and the starting value of the Prefix-SID
          range.</t>

          <t>Example 1: if the following router addresses (loopback addresses)
          need to be mapped into the corresponding Prefix SID indexes. <figure
              suppress-title="true">
              <artwork>
Router-A: 192.0.2.1/32, Prefix-SID: Index 1
Router-B: 192.0.2.2/32, Prefix-SID: Index 2
Router-C: 192.0.2.3/32, Prefix-SID: Index 3
Router-D: 192.0.2.4/32, Prefix-SID: Index 4
	      </artwork>
            </figure> <figure suppress-title="true">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |      Type     |     Length    |0|0|1|1|       |     Weight    |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Range = 4          |       /32     |      192      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |       .0      |        .2     |       .1      |  Sub-TLV Type |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | Sub-TLV Length|                                             1 |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	    </artwork>
            </figure></t>

          <t>Example-2: If the following prefixes need to be mapped into the
          corresponding Prefix-SID indexes: <figure suppress-title="true">
              <artwork>
10.1.1/24, Prefix-SID: Index 51
10.1.2/24, Prefix-SID: Index 52
10.1.3/24, Prefix-SID: Index 53
10.1.4/24, Prefix-SID: Index 54
10.1.5/24, Prefix-SID: Index 55
10.1.6/24, Prefix-SID: Index 56
10.1.7/24, Prefix-SID: Index 57
	    </artwork>
            </figure> <figure suppress-title="true">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |      Type     |     Length    |0|0|1|1|       |     Weight    |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Range = 7          |       /24     |      10       |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |       .1      |        .1     |  Sub-TLV Type | Sub-TLV Length|
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                            51 |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
              </artwork>
            </figure></t>

          <t>It is not expected that a network operator will be able to keep
          fully continuous FEC Prefix / SID/Index mappings. In order to
          support noncontinuous mapping ranges an implementation MAY generate
          several instances of Binding TLVs.</t>

          <t>For example if a router wants to advertise the following ranges:
          <list style="hanging">
              <t>Range 16: { 192.168.1.1-15, Index 1-15 }</t>

              <t>Range 6: { 192.168.1.22-27, Index 22-27 }</t>

              <t>Range 41: { 192.168.1.44-84, Index 80-120 }</t>
            </list> A router would need to advertise three instances of the
          Binding TLV.</t>
        </section>

        <section title="Prefix Length, Prefix">
          <t>The 'FEC Prefix' represents the Forwarding equivalence class at
          the tail-end of the advertised path. The 'FEC Prefix' does not need
          to correspond to a routable prefix of the originating node.</t>

          <t>The 'Prefix Length' field contains the length of the prefix in
          bits. Only the most significant octets of the Prefix FEC are
          encoded. I.e. 1 octet for FEC prefix length 1 up to 8, 2 octets for
          FEC prefix length 9 to 16, 3 octets for FEC prefix length 17 up to
          24 and 4 octets for FEC prefix length 25 up to 32, ...., 16 octets
          for FEC prefix length 113 up to 128.</t>
        </section>

        <section title="SID/Label Sub-TLV">
          <t>The SID/Label Sub-TLV (Type 1) contains the SID/Label value as defined in
          <xref target="SIDLABEL"/>. It MUST be present in every SID/Label
          Binding TLV.</t>
        </section>

        <!-- begin ERO Metric subTLV -->

        <section anchor="METRICTLV" title="ERO Metric sub-TLV">
          <t>ERO Metric sub-TLV (Type 2) is a Sub-TLV of the SID/Label Binding TLV.</t>

          <t>The ERO Metric sub-TLV carries the cost of an ERO path. It is
          used to compare the cost of a given source/destination path. A
          router SHOULD advertise the ERO Metric sub-TLV. The cost of the ERO
          Metric sub-TLV SHOULD be set to the cumulative IGP or TE path cost
          of the advertised ERO. Since manipulation of the Metric field may
          attract or distract traffic from and to the advertised segment it
          MAY be manually overridden. <figure
              title="ERO Metric sub-TLV format">
              <artwork>
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |     Type      |    Length     |             Metric            |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |      Metric (continued)       |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	      </artwork>
            </figure> where: <list style="hanging">
              <t>Type: 2</t>

              <t>Length: 4</t>

              <t>Metric: 4 bytes</t>
            </list></t>
        </section>

        <!-- end ERO metric subTLV -->

        <section title="IPv4 ERO subTLV">
          <t>The IPv4 ERO subTLV (Type 3) describes a path segment using
          IPv4 address style of encoding. Its semantics have been borrowed
          from <xref target="RFC3209"/>.</t>

          <t>The 'L' bit in the Flags is a one-bit attribute. If the L bit is
          set, then the value of the attribute is 'loose.' Otherwise, the
          value of the attribute is 'strict.'</t>

          <figure anchor="IPv4-ERO-subTLV-figure"
                  title="IPv4 ERO subTLV format">
            <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Length    |L|   Reserved  |  IPv4 address |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |          IPv4 address  (continued)            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	  </artwork>
          </figure>
        </section>

        <!-- end IPv4 ERO subtLV -->

        <section title="IPv6 ERO subTLV">
          <t>The IPv6 ERO subTLV (Type 4) describes a path segment using
          IPv6 Address style of encoding. Its semantics have been borrowed
          from <xref target="RFC3209"/>.</t>

          <t>The 'L' bit in the Flags is a one-bit attribute. If the L bit is
          set, then the value of the attribute is 'loose.' Otherwise, the
          value of the attribute is 'strict.'</t>

          <figure anchor="IPv6-ERO-subTLV-figure"
                  title="IPv6 ERO subTLV format">
            <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Length    |L|   Reserved  |  IPv6 address |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | IPv6 Address (continued)                                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | IPv6 Address (continued)                                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | IPv6 Address (continued)                                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | IPv6 Address (continued)                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	    </artwork>
          </figure>
        </section>

        <!-- end IPv6 ERO subtLV -->

        <section title="Unnumbered Interface ID ERO subTLV">
          <t>The appearance and semantics of the 'Unnumbered Interface ID'
          have been borrowed from <xref target="RFC3477"> Section
          4</xref>.</t>

          <t>The Unnumbered Interface-ID ERO subTLV (Type 5) describes a
          path segment that spans over an unnumbered interface. Unnumbered
          interfaces are referenced using the interface index. Interface
          indices are assigned local to the router and therefore not unique
          within a domain. All elements in an ERO path need to be unique
          within a domain and hence need to be disambiguated using a domain
          unique Router-ID.</t>

          <t>The 'Router-ID' field contains the router ID of the router which
          has assigned the 'Interface ID' field. Its purpose is to
          disambiguate the 'Interface ID' field from other routers in the
          domain.</t>

          <t>IS-IS supports two Router-ID formats:</t>

          <t><list style="symbols">
              <t><xref target="RFC5305">(TLV 134, 32-Bit format)</xref></t>

              <t><xref target="RFC6119">(TLV 140, 128-Bit format)</xref></t>
            </list></t>

          <t>The actual Router-ID format gets derived from the 'Length'
          field.</t>

          <t><list style="symbols">
              <t>For 32-Bit Router-ID width the subTLV length is set to 8
              octets.</t>

              <t>For 128-Bit Router-ID width the subTLV length is set to 20
              octets.</t>
            </list></t>

          <t>The 'Interface ID' is the identifier assigned to the link by the
          router specified by the router ID.</t>

          <t>The 'L' bit in the Flags is a one-bit attribute. If the L bit is
          set, then the value of the attribute is 'loose.' Otherwise, the
          value of the attribute is 'strict.'</t>

          <figure anchor="Unnumbered-Interface-ID-ERO-subTLV-figure"
                  title="Unnumbered Interface ID ERO subTLV format">
            <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      Type     |     Length    |L|   Reserved  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   //                   Router ID (32 or 128 bits)                //
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Interface ID (32 bits)                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	    </artwork>
          </figure>
        </section>

        <!-- end Unnumbered Interface ID ERO subtLV -->

        <section title="IPv4 Backup ERO subTLV">
          <t>The IPv4 Backup ERO subTLV (Type 6) describes a Backup path
          segment using IPv4 Address style of encoding. Its appearance and
          semantics have been borrowed from <xref target="RFC3209"/>.</t>

          <t>The 'L' bit in the Flags is a one-bit attribute. If the L bit is
          set, then the value of the attribute is 'loose.' Otherwise, the
          value of the attribute is 'strict.'</t>

          <figure anchor="IPv4-Backup-ERO-subTLV-figure"
                  title="IPv4 Backup ERO subTLV format">
            <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Length    |L|   Reserved  |  IPv4 address |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |          IPv4 address  (continued)            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	    </artwork>
          </figure>
        </section>

        <!-- end IPv4 Backup ERO subtLV -->

        <section title="IPv6 Backup ERO subTLV">
          <t>The IPv6 Backup ERO subTLV (Type 7) describes a Backup path
          segment using IPv6 Address style of encoding. Its appearance and
          semantics have been borrowed from <xref target="RFC3209"/>.</t>

          <t>The 'L' bit in the Flags is a one-bit attribute. If the L bit is
          set, then the value of the attribute is 'loose.' Otherwise, the
          value of the attribute is 'strict.'</t>

          <figure anchor="IPv6-Backup-ERO-subTLV-figure"
                  title="IPv6 Backup ERO subTLV format">
            <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Length    |L|   Reserved  |  IPv6 address |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | IPv6 Address (continued)                                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | IPv6 Address (continued)                                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | IPv6 Address (continued)                                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | IPv6 Address (continued)                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	    </artwork>
          </figure>
        </section>

        <!-- end IPv6 Backup ERO subtLV -->

        <section title="Unnumbered Interface ID Backup ERO subTLV">
          <t>The appearance and semantics of the 'Unnumbered Interface ID'
          have been borrowed from <xref target="RFC3477"> Section
          4</xref>.</t>

          <t>The Unnumbered Interface-ID Backup ERO subTLV (Type 8)
          describes a Backup LSP path segment that spans over an unnumbered
          interface. Unnumbered interfaces are referenced using the interface
          index. Interface indices are assigned local to the router and
          therefore not unique within a domain. All elements in an ERO path
          need to be unique within a domain and hence need to be disambiguated
          using a domain unique Router-ID.</t>

          <t>The 'Router-ID' field contains the router ID of the router which
          has assigned the 'Interface ID' field. Its purpose is to
          disambiguate the 'Interface ID' field from other routers in the
          domain.</t>

          <t>IS-IS supports two Router-ID formats:</t>

          <t><list style="symbols">
              <t><xref target="RFC5305">(TLV 134, 32-Bit format)</xref></t>

              <t><xref target="RFC6119">(TLV 140, 128-Bit format)</xref></t>
            </list></t>

          <t>The actual Router-ID format gets derived from the 'Length'
          field.</t>

          <t><list style="symbols">
              <t>For 32-Bit Router-ID width the subTLV length is set to 8
              octets.</t>

              <t>For 128-Bit Router-ID width the subTLV length is set to 20
              octets.</t>
            </list></t>

          <t>The 'Interface ID' is the identifier assigned to the link by the
          router specified by the router ID.</t>

          <t>The 'L' bit in the Flags is a one-bit attribute. If the L bit is
          set, then the value of the attribute is 'loose.' Otherwise, the
          value of the attribute is 'strict.'</t>

          <figure anchor="Unnumbered-Interface-ID-Backup-ERO-subTLV-figure"
                  title="Unnumbered Interface ID Backup ERO subTLV format">
            <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      Type     |     Length    |L|   Reserved  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   //                   Router ID (32 or 128 bits)                //
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Interface ID (32 bits)                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  </artwork>
          </figure>
        </section>

        <!-- end Unnumbered Interface ID Backup ERO subtLV -->

        <section title="Prefix ERO and Prefix Backup ERO subTLV path semantics">
          <t>All 'ERO' and 'Backup ERO' information represents an ordered set
          which describes the segments of a path. The last ERO subTLV
          describes the segment closest to the egress point of the path.
          Contrary the first ERO subTLV describes the first segment of a path.
          If a router extends or stitches a label switched path it MUST
          prepend the new segments path information to the ERO list. The same
          ordering applies for the Backup ERO labels. An implementation SHOULD
          first encode all primary path EROs followed by the bypass EROs.</t>
        </section>
      </section>


	  <section anchor="SR-CAP" title="SR-Capabilities TLV">
	    <t>Segment Routing requires each router to advertise its SR data-plane
	    capability and the range of SID/Label values it uses for Segment
	    Routing. Data-plane capabilities and SID/Label ranges are advertised
	    using the newly defined SR-Capabilities.</t>

	    <t>The SR Capabilities TLV (Type 1031) is optional, MAY appear multiple times
	    and has following format: <figure>
            <artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|             Type              |              Length           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Flags       |             Range            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      SID/Label Sub-TLV (variable size)        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	  </artwork>
          </figure> where: <list style="hanging">
            <t>Type: 1031</t>

            <t>Length: variable.</t>

            <t>Flags: 1 octet of flags. The following are defined:
	    <figure>
                <artwork>
   0               
   0 1 2 3 4 5 6 7 
   +-+-+-+-+-+-+-+-+
   |I|V|           | 
   +-+-+-+-+-+-+-+-+
</artwork>
            </figure>where:
	    <list style="hanging">
	      <t>I-Flag: IPv4 flag. If set, then the router is capable of
	      outgoing IPv4 encapsulation on all interfaces.</t>

	      <t>V-Flag: IPv6 flag. If set, then the router is capable of
	      outgoing IPv6 encapsulation on all interfaces.</t>
	    </list></t>

            <t>Range: 2 octets value defining the number of values of the
            range from the starting value defined in the SID/Label
            Sub-TLV.</t>

            <t>SID/Label Sub-TLV: SID/Label value as defined in
	    <xref target="SIDLABEL"/>.</t>
	    </list></t>

	    <t>If multiple occurrence of the SR-Capabilities TLV are
	    advertised by the same router, only the Flags in the first occurrence
	    of the Sub-TLV are to be taken into account.</t>
	  </section>

	  <section anchor="SR-ALGO" title="SR-Algorithm TLV">
	    <t>The router may use various algorithms when calculating reachability
	    to other nodes or to prefixes attached to these nodes. Examples of
	    these algorithms are metric based Shortest Path First (SPF), various
	    sorts of Constrained SPF, etc. The SR-Algorithm Sub-TLV (Type 1032) allows the
	    router to advertise the algorithms that the router is currently using for
	    calculating hop-by-hop paths.
	    The following value has been defined:
	    <list>
	      <t>0: Shortest Path First (SPF) algorithm based on link metric.</t>
	    </list></t>

	    <t>The SR-Algorithm TLV is optional, it MAY only appear a single
	    time inside a node descriptor NLRI. If the SID-Label Capability
	    TLV is advertised then the SR-Algorithm TLV MUST also be advertised.</t>

	    <t>It has following format:
	    <figure>
	      <artwork>
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |   Type                        |     Length                    |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Algorithm 1   |  Algorithm 2  | Algorithm ... |  Algorithm n  |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	      </artwork>
	    </figure>where: <list style="hanging">
            <t>Type: 1032</t>
            <t>Length: variable.</t>
            <t>Algorithm: 1 octet of algorithm</t>
          </list></t>
	  </section>

        </section>

        <section anchor="link_attribute" title="Link Attribute TLVs">
          <t>Link attribute TLVs are TLVs that may be encoded in the BGP-LS
          attribute with a link NLRI.  Each 'Link Attribute' is a
          Type/Length/Value (TLV) triplet formatted as defined in <xref
          target="TLV-section"></xref>.</t>

          <t>The following 'Link Attribute' TLVs are are valid in the
          LINK_STATE attribute:</t>

          <texttable anchor="table_link_attribute_tlv"
                     title="Link Attribute TLVs">
            <ttcol align="center">TLV Code Point</ttcol>
            <ttcol align="left">Description</ttcol>
            <ttcol align="right">Length</ttcol>
            <ttcol align="left">Defined in:</ttcol>

            <c>1099</c>
            <c>Adjacency Segment Identifier (Adj-SID) TLV</c>
            <c>variable</c>
            <c><xref target="ADJSIDTLV"></xref>/4.3</c>

            <c>1100</c>
            <c>LAN Adjacency Segment Identifier (Adj-SID) TLV</c>
            <c>variable</c>
            <c><xref target="ADJSIDLANTLV"></xref>/4.1</c>

          </texttable>


        <section anchor="ADJSIDTLV"
                 title="Adjacency Segment Identifier (Adj-SID) TLV">
          <t>The following format is defined for the Adj-SID Sub-TLV:<figure>
              <artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Type        |     Length    |     Flags     |     Weight    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|               SID/Label Sub-TLV (variable)                    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

where:</artwork>
            </figure><list style="hanging">
              <t>Type: 1099</t>

              <t>Length: variable.</t>

              <t>Flags: 1 octet field of following flags: <figure>
                  <artwork> 
      0 1 2 3 4 5 6 7 
      +-+-+-+-+-+-+-+
      |F|B|         | 
      +-+-+-+-+-+-+-+
		</artwork>
                </figure> where: <list style="hanging">
                  <t>F-Flag: Address-Family flag. If unset, then the Adj-SID
                  refers to an adjacency with outgoing IPv4 encapsulation. If
                  set then the Adj-SID refers to an adjacency with outgoing
                  IPv6 encapsulation.</t>

                  <t>B-Flag: Backup flag. If set, the Adj-SID refers to an
                  adjacency being protected (e.g.: using IPFRR or MPLS-FRR) as
                  described in <xref
                  target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>

                  <!-- HG: can we say that it MAY be optional to encode the actual Backup path using a Binding TLV ?
     The Binding TLV would have the same SID/Label value than the Adj-SID and it MUST only
     contain a Backup-ERO list (no Primary ERO).
-->

                  <t>Other bits: MUST be zero when originated and ignored when
                  received.</t>
                </list></t>

              <t>Weight: 1 octet. The value represents the weight of the
              Adj-SID for the purpose of load balancing. The use of the weight
              is defined in <xref
              target="I-D.filsfils-rtgwg-segment-routing"/>.</t>

              <t>SID/Label Sub-TLV: contains the SID/Label value as defined in
              <xref target="SIDLABEL"/>.</t>

              <t>An SR capable router MAY allocate an Adj-SID for each of its
              adjacencies and SHOULD set the B-Flag when the adjacency is
              protected by a FRR mechanism (IP or MPLS) as described in <xref
              target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>

              <t>The F-flag is used in order for the router to advertise the
              outgoing encapsulation of the adjacency the Adj-SID is attached
              to. Use cases of the use of the F-flag are described in <xref
              target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>
            </list></t>
        </section>

        <section anchor="ADJSIDLANTLV"
		 title="Adjacency Segment Identifiers (Adj-SID) LAN TLV">
          <t>In LAN subnetworks, the Designated Intermediate System (DIS) is
          elected and originates the Pseudonode-LSP (PN-LSP) including all
          neighbors of the DIS.</t>

          <t>When Segment Routing is used, each router in the LAN MAY
          advertise the Adj-SID of each of its neighbors. Since, on LANs, each
          router only advertises one adjacency to the Pseudonode (and doesn't
          advertise any other adjacency), each router advertises the set of
          Adj-SIDs (for each of its neighbors) inside a newly defined TLV
          part of the NLRI advertising the adjacency to the Pseudonode.</t>

          <t>The following new TLV is defined: LAN-Adj-SID (Type 1100) containing the
          set of Adj-SIDs the router assigned to each of its LAN
          neighbors.</t>

          <t>The format of the LAN-Adj-SID Sub-TLV is as follows:<figure>
              <artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Type        |     Length    |      Flags    |    Weight     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     neighbor-ID (variable)                    |
+                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                               | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                   SID/Label Sub-TLV (variable)                |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

where: </artwork>
            </figure><list style="hanging">
              <t>Type: 1100</t>

              <t>Length: variable.</t>

              <t>Flags: 1 octet field of following flags: <figure>
                  <artwork> 
      0 1 2 3 4 5 6 7 
      +-+-+-+-+-+-+-+
      |F|B|         | 
      +-+-+-+-+-+-+-+
		</artwork>
                </figure> where: <list style="hanging">
                  <t>F-Flag: Address Family flag. If unset, then the Adj-SID
                  refers to an adjacency with outgoing IPv4 encapsulation. If
                  set then the Adj-SID refers to an adjacency with outgoing
                  IPv6 encapsulation.</t>

                  <t>B-Flag: Backup flag. If set, the LAN-Adj-SID refers to an
                  adjacency being protected (e.g.: using IPFRR or MPLS-FRR) as
                  described in <xref
                  target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>


                  <t>Other bits: MUST be zero when originated and ignored when
                  received.</t>
                </list></t>

              <t>Weight: 1 octet. The value represents the weight of the
              Adj-SID for the purpose of load balancing. The use of the weight
              is defined in <xref
              target="I-D.filsfils-rtgwg-segment-routing"/>.</t>

              <t>Neighbor-ID: 4 or 6 octets of a neighbor-ID. If the NLRI protocol
	      type in the BGP LS header is IS-IS L1 or IS-IS L2 then the length
	      equals to 6 octects. In all other cases tha neighbor-ID length is
	      4 octects.</t>

              <t>SID/Label Sub-TLV: contains the SID/Label value as defined in
              <xref target="SIDLABEL"/>.</t>
            </list></t>

          <t>Multiple LAN-Adj-SID Sub-TLVs MAY be encoded.</t>

        </section>


        </section>

        <section title="Prefix Attribute TLVs">
          <t>Prefix attribute TLVs are the TLVs that may be encoded in the BGP-LS
          attribute with a Prefix NLRI (Type 3 and 4). Each 'Node Attribute' is a
          Type/Length/Value (TLV) triplet formatted as defined in <xref
          target="TLV-section"></xref>.</t>

          <t>The following 'Prefix Attribute' TLVs are are valid in the
          BGP LINK_STATE attribute:</t>

          <texttable anchor="prefix-attribute_tlv"
                     title="Prefix Attribute TLVs">
            <ttcol align="center">TLV Code Point</ttcol>
            <ttcol align="left">Description</ttcol>
            <ttcol align="right">Length</ttcol>
            <ttcol align="left">Reference</ttcol>

            <c>1158</c>
            <c>Prefix SID</c>
            <c>variable</c>
            <c><xref target="PREFIXSIDTLV"></xref></c>

          </texttable>

      <section anchor="PREFIXSIDTLV"
               title="Prefix Segment Identifier (Prefix-SID TLV)">
        <t>The Prefix-SID TLV carries the Segment Routing Prefix-SID
        as defined in <xref target="I-D.filsfils-rtgwg-segment-routing"/>. The
        'Prefix SID' must be unique within a given IGP domain. The 'Prefix
        SID' is an index to determine the actual SID/label value inside the
        set of all advertised SID/label ranges of a given router. A receiving
        router uses the index to determine the actual SID/label value in order
        to construct forwarding state to a particular destination router.</t>

        <t>In many use-cases a 'stable transport' IP Address is overloaded as
        an identifier of a given node. Because the IP Prefixes may be
        re-advertised into other levels there may be some ambiguity (e.g.
        Originating router vs. L1L2 router) for which node a particular IP
        prefix serves as identifier. The Prefix-SID TLV contains the
        necessary flags to dissambiguate IP Prefix to node mappings.
        Furthermore if a given node has several 'stable transport' IP adresses
        there are flags to differentiate those among other IP Prefixes
        advertised from a given node.</t>

        <t>The Prefix-SID Sub-TLV has the following format:<figure>
            <artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|              Type             |             Length            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Flags     |   Algorithm   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        SID/Index                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

where:</artwork>
          </figure><list style="hanging">
            <t>Type: 1158</t>

            <t>Length: variable.</t>

            <t>Flags: 1 octet field of following flags: <figure>
                <artwork>
0 1 2 3 4 5 6 7 
+-+-+-+-+-+-+-+-+
|R|N|P|         | 
+-+-+-+-+-+-+-+-+
 </artwork>
              </figure> where: <list style="hanging">
                <t>R-Flag: Re-advertisement flag. If set, then the prefix to
                which this Prefix-SID is attached, has been propagated by the
                router either from another level (i.e.: from IS-IS level-1 to
                IS-IS level-2, from OSPF Area 0 to OSPF Area non-zero, or the opposite)
		or from redistribution (e.g.: from
                another protocol).</t>

                <t>N-Flag: Node-SID flag. Optional and, if set, then the
                Prefix-SID refers to the router identified by the prefix.
                Typically, the N-Flag is set on Prefix-SIDs attached to a
                router loopback address. The N-Flag is set when the Prefix-SID
                is a Node-SID as described in <xref
                target="I-D.filsfils-rtgwg-segment-routing"/>.</t>

                <t>P-Flag: no-PHP flag. If set, then the penultimate hop MUST
                NOT pop the Prefix-SID before delivering the packet to the
                node that advertised the Prefix-SID.</t>

                <t>Other bits: MUST be zero when originated and ignored when
                received.</t>
              </list></t>

            <t>Algorithm: the router may use various algorithms when
            calculating reachability to other nodes or to prefixes attached to
            these nodes. Examples of these algorithms are metric based
            Shortest Path First (SPF), various sorts of Constrained SPF, etc.
            The Algorithm field allows a router to advertise algorithms that
            router is currently using. SR-Algorithm TLV has following
            structure: one octet identifying the algorithm to which the
            Prefix-SID is associated. Currently, the following value has been
            defined: <list style="hanging">
                <t>0: Shortest Path First (SPF) algorithm based on link
                metric.</t>

                <t>Definitions and use of algorithms in Segment Routing are
                described in <xref
                target="I-D.filsfils-rtgwg-segment-routing"/></t>
              </list></t>

            <t>SID/Index: 32 bit index defining the offset in the SID/Label
            space advertised by this router using the encodings defined in
            <xref target="SR-CAP"/>.</t>
          </list></t>

        <t>Multiple Prefix-SIDs Sub-TLVs MAY appear on the same prefix in
        which case each SID is encoded as a separate Sub-TLV. When multiple
        Prefix-SID Sub-TLVs are present, the receiving router MUST use the
        first encoded SID and MAY use the subsequent ones.</t>

        <t>The No-PHP flag MUST be set on the Prefix-SIDs associated with
        reachability advertisements which were originated by other routers and
        leaked (either from Level-1 to Level-2 or vice versa).</t>

        <t>The R-Flag MUST be set for prefixes that are not local to the
        router and either:<list style="hanging">
            <t>advertised because of propagation (Level-1 into Level-2);</t>

            <t>advertised because of leaking (Level-2 into Level-1);</t>

            <t>advertised because redistribution (e.g.: from another
            protocol).</t>
          </list></t>

        <t>In the case where a Level-1-2 router has local interface addresses
        configured in one level, it may also propagate these addresses into
        the other level. In such case, the Level-1-2 router MUST NOT set the R
        bit. The R-bit MUST be set only for prefixes that are not local to the
        router and advertised by the router because of propagation and/or
        leaking.</t>

        <t>The N-Flag is used in order to define a Node-SID. A router MAY set
        the N-Flag only if all of the following conditions are met:<list
            style="hanging">
            <t>The prefix to which the Prefix-SID is attached is local to the
            router. I.e.: the prefix is configured on one of the local
            interfaces. (e.g.: 'stable transport' loopback).</t>

            <t>The prefix to which the Prefix-SID is attached MUST have a
            Prefix length of either /32 (IPv4) or /128 (IPv6).</t>
          </list></t>

        <t>The router MUST ignore the N-Flag on a received Prefix-SID if the
        prefix has a Prefix length different than /32 (IPv4) or /128
        (IPv6).</t>

        <t>The router behavior determined by the P, R and N flags are
        described in <xref target="I-D.filsfils-rtgwg-segment-routing"/>.</t>
      </section>


        </section>
      </section>

      <section title="TE Controller operation">
	<t>A TE controller instructs the network to setup 'paths' by injecting
	paths as if the Ingress Node would have reported a 'path'. By setting the
	router-ID of a ingress router in the node-descriptor a target node knows that
	it has to take action and program a forwarding path. For distinguishing the 'instructed' path and the
	actual programmed path a router is using two new protocol-IDs in the NLRI header.

        <list style="hanging">
          <t>Protocol-ID = 8: PCE-S, The NLRI information has been sourced by
          a Path computation Element Server (PCE-S)</t>
          
          <t>Protocol-ID = 9: PCE-C, The NLRI information has been sourced by
          a Path computation Element Client (PCE-C)</t>
	</list>
	</t>

	<t>The above two Protocol-IDs are used a simple feedback mechanism to
	see if the actual path has been programmed and is ready for use.
	</t>

	<figure anchor="TECONTROLLER-EX" title="TE controller operation">
	  <artwork><![CDATA[
              +----+         +----+         +----+
              | R1 +---------+ R2 +---------+ R5 |
              +----+    2    +----+    2    +----+
             /      \           |  \              \
            / 2      \          |   \              \ 2
           /          \         |    \              \
     +----+            \        |     \              +----+
     | S  |             \ 5     | 5    \ 5           | D  |
     -----+              \      |       \            +----+
           \              \     |        \          /
            \ 1            \    |         \        / 1
             \              \   |          \      /
              +----+         +----+         +----+
              | R3 +---------+ R4 |---------+ R6 |
              +----+    1    +----+    1    +----+
	  ]]></artwork>
	</figure>

	<t>Assume a TE controller wants to instruct router 'S' to
	setup a path to destination 'D' with the following ERO:
	{R1, R4, R2, R6, D}.
	</t>

	<t>From reading the link state database the TE controller knows that
	each for each link a 1-hop LSP Segment is advertised. The TE-controller will next
	generate a NLRI with protocol type 'PCE-S', source node-descriptor router 'S' and
	a destination node-descriptor router 'D' along with a list of the ERO elements plus
	their corresponding 1-hop LSP segment IDs how to reach the next node. Note that
	the ERO and the Label/SID objects are encoded in pairs.

	<list>
	  <t>protocol-ID 'PCE-S':</t>
	  <t>{source node descriptor 'S'}</t>
	  <t>{destination node descriptor 'D'}</t>
	  <t>{ERO: R1, SID/label: none}</t>
	  <t>{ERO: R4, SID/label: R1->R4}</t>
	  <t>{ERO: R2, SID/label: R4->R2}</t>
	  <t>{ERO: R6, SID/label: R2->R6}</t>
	  <t>{ERO:  D, SID/label: R6->D}</t>
	</list>
	</t>

	<t>A receiving router MUST install an entry to destination router 'D'
	  in its tunnel RIB along with the stacked label set. (As per the above example this
	  results in a label stack of 4 labels)
	</t>

	<t>A receiving router MUST tell the TE Controller that the forwarding entry has been
	sucessfully programmed by readertising the path with a different protocol-ID code.
	In additon the individual labels of teh stack will be omitted. teh only Label/SID
	which gets advertised is a new Label/SID &lt;N&gt; which keys the quad push as
	instructed by TE-controller.

	<list>
	  <t>protocol-ID 'PCE-C':</t>
	  <t>{source node descriptor 'S'}</t>
	  <t>{destination node descriptor 'D'}</t>
	  <t>SID/label: &lt;N&gt;</t>
	  <t>{ERO: R1}</t>
	  <t>{ERO: R4}</t>
	  <t>{ERO: R2}</t>
	  <t>{ERO: R6}</t>
	  <t>{ERO:  D}</t>
	</list>

	</t>

      </section>

    </section>


    <section anchor="IANA" title="IANA Considerations">
      <t>This document requests a code point from the registry of Address Family
      Numbers. As per early allocation procedure this is AFI 16388.</t>

      <t>This document requests a code point from the registry of Subsequent
      Address Family Numbers. As per early allocation procedure this is SAFI
      71.</t>

      <t>This document requests a code point from the BGP Path Attributes
      registry.</t>

      <t>This document requests creation of a new registry for node anchor, link
      descriptor and link attribute TLVs. Values 0-255 are reserved.  Values
      256-65535 will be used for Codepoints. The registry will be initialized as
      shown in <xref target="BGPLSCODEPOINTS"/>. Allocations within the registry
      will require documentation of the proposed use of the allocated value and
      approval by the Designated Expert assigned by the IESG (see <xref
      target="RFC5226"></xref>).</t>

      <t>Note to RFC Editor: this section may be removed on publication as an
      RFC.</t>
    </section>

    <section anchor="Manageability" title="Manageability Considerations">
      <t>This section is structured as recommended in <xref
      target="RFC5706"></xref>.</t>

      <section anchor="Operational-Considerations"
               title="Operational Considerations">
        <section anchor="Operations" title="Operations">
          <t>Existing BGP operational procedures apply. No new operation
          procedures are defined in this document. It is noted that the NLRI
          information present in this document purely carries application level
          data that has no immediate corresponding forwarding state impact. As
          such, any churn in reachability information has different impact than
          regular BGP updates which need to change forwarding state for an
          entire router. Furthermore it is anticipated that distribution of this
          NLRI will be handled by dedicated route-reflectors providing a level
          of isolation and fault-containment between different NLRI types.</t>
        </section>

        <section anchor="Initial-Setup" title="Installation and Initial Setup">
          <t>Configuration parameters defined in <xref
          target="Configuration-Management"></xref> SHOULD be initialized to
          the following default values: <list style="symbols">
          <t>The Link-State NLRI capability is turned off for all neighbors.</t>
          
          <t>The maximum rate at which Link-State NLRIs will be
          advertised/withdrawn from neighbors is set to 200 updates per
          second.</t>
          </list></t>
        </section>

        <section anchor="Migration-Path" title="Migration Path">
          <t>The proposed extension is only activated between BGP peers after
          capability negotiation. Moreover, the extensions can be turned
          on/off an individual peer basis (see <xref
          target="Configuration-Management"></xref>), so the extension can be
          gradually rolled out in the network.</t>
        </section>

        <section anchor="Other-Protocols"
                 title="Requirements on Other Protocols and Functional Components">
          <t>The protocol extension defined in this document does not put new
          requirements on other protocols or functional components.</t>
        </section>

        <section anchor="Network-Operation"
                 title="Impact on Network Operation">
          <t>Frequency of Link-State NLRI updates could interfere with regular
          BGP prefix distribution. A network operator MAY use a dedicated
          Route-Reflector infrastructure to distribute Link-State NLRIs.</t>

          <t>Distribution of Link-State NLRIs SHOULD be limited to a single
          admin domain, which can consist of multiple areas within an AS or
          multiple ASes.</t>
        </section>

        <section anchor="Verifying-Correct-Operation"
                 title="Verifying Correct Operation">
          <t>Existing BGP procedures apply. In addition, an implementation
          SHOULD allow an operator to:

          <list style="symbols">
            <t>List neighbors with whom the Speaker is exchanging Link-State
            NLRIs</t>
          </list></t>
        </section>
      </section>

      <section anchor="Management-Considerations"
               title="Management Considerations">
        <section anchor="Management-Information"
                 title="Management Information"></section>

        <section anchor="Fault-Management" title="Fault Management">
          <t>TBD.</t>
        </section>

        <section anchor="Configuration-Management"
                 title="Configuration Management">
          <t>An implementation SHOULD allow the operator to specify neighbors
          to which Link-State NLRIs will be advertised and from which
          Link-State NLRIs will be accepted.</t>

          <t>An implementation SHOULD allow the operator to specify the
          maximum rate at which Link-State NLRIs will be advertised/withdrawn
          from neighbors</t>

          <t>An implementation SHOULD allow the operator to specify the
          maximum number of Link-State NLRIs stored in router's RIB.</t>

          <t>An implementation SHOULD allow the operator to create abstracted
          topologies that are advertised to neighbors; Create different
          abstractions for different neighbors.</t>

          <t>An implementation SHOULD allow the operator to configure a 64-bit
          instance ID.</t>

          <t>An implementation SHOULD allow the operator to configure a pair
          of ASN and BGP-LS identifier per flooding set the node participates
          in.</t>
        </section>
	
        <section anchor="Accounting-Management" title="Accounting Management">
          <t>Not Applicable.</t>
        </section>

        <section anchor="Performance-Management"
                 title="Performance Management">
          <t>An implementation SHOULD provide the following statistics: <list
              style="symbols">
          <t>Total number of Link-State NLRI updates sent/received</t>

          <t>Number of Link-State NLRI updates sent/received, per
          neighbor</t>

          <t>Number of errored received Link-State NLRI updates, per
          neighbor</t>

          <t>Total number of locally originated Link-State NLRIs</t>
          </list></t>
        </section>

        <section anchor="Security-Management" title="Security Management">
          <t>An operator SHOULD define ACLs to limit inbound updates as
          follows: <list style="symbols">
          <t>Drop all updates from Consumer peers</t>
          </list></t>
        </section>
      </section>
    </section>
    <section anchor="TLVSUMMARY" title="TLV/Sub-TLV Code Points Summary">
      <t>This section contains the global table of all TLVs/Sub-TLVs defined in
      this document.</t>
      
      <texttable anchor="BGPLSCODEPOINTS"
                 title="Summary Table of TLV/Sub-TLV Codepoints">
        <ttcol align="center">TLV Code Point</ttcol>
        <ttcol align="left">Description</ttcol>
        <ttcol align="center">Length</ttcol>
        <ttcol align="left">Value defined in:</ttcol>

        <!-- BGP-LS Attribute TLVs -->

        <!-- Node Attributes TLVs -->

	<c>1030</c>
	<c>SID/Label Binding</c>
	<c>variable</c>
	<c><xref target="BINDING-TLV"/></c>
	
	<c>1031</c>
	<c>SR Capabilities</c>
	<c>variable</c>
	<c><xref target="SR-CAP"/></c>
	
	<c>1032</c>
	<c>SR Algorithm</c>
	<c>variable</c>
	<c><xref target="SR-ALGO"/></c>

       <!-- Link  Attribute TLVs -->

        <c>1099</c>
	<c>Adjacency Segment Identifier (Adj-SID) TLV</c>
	<c>variable</c>
	<c><xref target="ADJSIDTLV"></xref>/4.3</c>
       
	<c>1100</c>
	<c>LAN Adjacency Segment Identifier (Adj-SID) TLV</c>
	<c>variable</c>
	<c><xref target="ADJSIDLANTLV"></xref>/4.1</c>

        <!-- Prefix Attributes TLVs -->

        <c>1158</c>
        <c>Prefix SID</c>
        <c>---</c>
        <c><xref target="PREFIXSIDTLV"></xref></c>

      </texttable>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Procedures and protocol extensions defined in this document do not
      affect the BGP security model. See the 'Security Considerations' section
      of <xref target="RFC4271"/> for a discussion of BGP security.  Also refer
      to <xref target="RFC4272"/> and
      <xref target="I-D.ietf-karp-routing-tcp-analysis"/>
      for analysis of security issues for BGP.</t>

      <t>In the context of the BGP peerings associated with this document, a BGP
      Speaker SHOULD NOT accept updates from a Consumer peer.  That is, a
      participating BGP Speaker, should be aware of the nature of its
      relationships for link state relationships and should protect itself from
      peers sending updates that either represent erroneous information feedback
      loops, or are false input.  Such protection can be achieved by manual
      configuration of Consumer peers at the BGP Speaker.</t>

      <t>An operator SHOULD employ a mechanism to protect a BGP Speaker against
      DDOS attacks from Consumers.  The principal attack a consumer may apply is
      to attempt to start multiple sessions either sequentially or
      simultaneously.  Protection can be applied by imposing rate limits.</t>

      <t>Additionally, it may be considered that the export of link state and TE
      information as described in this document constitutes a risk to
      confidentiality of mission-critical or commercially-sensitive information
      about the network.  BGP peerings are not automatic and require
      configuration, thus it is the responsibility of the network operator to
      ensure that only trusted Consumers are configured to receive such
      information.
      </t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>We would like to thank Yakov Rekhter for his useful comments.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3209.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3477.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4271.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4272.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5305.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6119.xml"?>
    </references>

    <references title="Informative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-idr-ls-distribution-04.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-previdi-isis-segment-routing-extensions-04"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-psenak-ospf-segment-routing-extensions-03.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-psenak-ospf-segment-routing-ospfv3-extension-00.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-filsfils-rtgwg-segment-routing-00.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-filsfils-rtgwg-segment-routing-use-cases-01.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-karp-routing-tcp-analysis.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4655.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5152.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5706.xml"?>
    </references>
  </back>
</rfc>
